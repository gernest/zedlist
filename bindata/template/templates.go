// Code generated by go-bindata.
// sources:
// templates/auth/delete.html
// templates/auth/login.html
// templates/auth/register.html
// templates/base/docs.html
// templates/base/docs_index.html
// templates/base/home.html
// templates/base/jobs.html
// templates/base/landing.html
// templates/base/regions.html
// templates/base/regions_job.html
// templates/base/regions_paginate.html
// templates/errors/400.html
// templates/errors/404.html
// templates/errors/500.html
// templates/jobs/list.html
// templates/jobs/new.html
// templates/jobs/update.html
// templates/jobs/view.html
// templates/partials/common_header.html
// templates/partials/docs_index.html
// templates/partials/error_message.html
// templates/partials/flash.html
// templates/partials/footer.html
// templates/partials/header.html
// templates/partials/job_box.html
// templates/partials/job_list.html
// templates/partials/job_stats.html
// templates/partials/main_menu.html
// templates/partials/regions_list.html
// templates/partials/sidenav.html
// templates/partials/supported_langs.html
// templates/partials/user.html
// templates/resume/home.html
// templates/resume/new.html
// templates/resume/update.html
// templates/resume/view.html
// templates/test/base/footer.tpl
// templates/test/base/header.tpl
// templates/test/tmpl/hello.tmpl
// templates/test/tmpl/script.html
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _authDeleteHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xcf\x6e\xa3\x30\x10\xc6\xef\x79\x8a\x91\xef\x0b\xd2\x9e\x81\xd5\xaa\xc9\xad\xc7\xdc\x23\xc7\x1e\x60\x54\xdb\x83\xec\x31\x55\x84\x78\xf7\x0a\x42\x5a\xd2\xf6\x64\xcf\x9f\x4f\xbf\xcf\x33\x9e\x26\x41\x3f\x38\x2d\x08\x6a\xd0\x51\x48\xbb\x54\x1a\xf6\x9e\xc3\xa5\x47\x6d\x31\x16\xbd\x78\xa7\xa0\x98\xe7\x43\x65\x69\x04\xe3\x74\x4a\xb5\x82\x4c\xe0\xc9\x5a\x87\xa0\x1d\x75\x01\x2d\x18\x0c\x82\xf1\x33\xec\x22\x59\xd5\x1c\x00\x00\x9e\x84\x8e\x3b\x0a\x7f\x5a\x8e\x7e\xab\xae\x1d\xfd\xdf\xaf\xe0\x87\xc4\x70\x10\x0c\xa2\x9a\xff\x11\xe1\xc6\x19\x52\xde\x2e\xef\x3a\x08\x58\x06\x8b\x0e\x65\x4d\x45\xd0\xc6\x70\x0e\xf2\x0f\xaa\xd2\xd2\xb8\x63\x94\x7b\x48\xb5\x38\x00\x8f\xd2\xb3\xad\xd5\xc0\x49\xd4\x83\x97\x09\x9c\x8e\x1d\xc2\x37\x93\xab\x8c\xc2\x90\x05\xc8\xd6\x4a\xf8\x0d\x83\x02\xb9\x0d\x58\xab\x9e\xac\x5d\xa2\xa0\x3d\xd6\xca\xa4\xd8\x5e\xb6\xfa\xa8\x5d\xc6\x5a\x4d\x13\x14\x2f\x29\xb6\xe7\x25\x0b\xf3\xac\x1a\x98\xa6\x62\x21\x14\xc7\xd5\xfc\x3c\x3f\x83\xae\x59\x84\xc3\xc3\x53\xc0\x4e\x0b\x8d\xb8\xcc\xbd\x75\x99\xec\x66\x31\xe5\xab\x27\x81\x7b\xb3\x6a\xe0\x78\x7a\x3d\x9d\x4f\x55\x79\x4f\xec\x1f\xbf\xa0\xb6\x75\xdc\xe7\xb2\x1d\xbf\x7e\x81\x96\x59\xf6\xbb\xff\x08\x00\x00\xff\xff\x94\xff\xec\xe9\x28\x02\x00\x00")

func authDeleteHtmlBytes() ([]byte, error) {
	return bindataRead(
		_authDeleteHtml,
		"auth/delete.html",
	)
}

func authDeleteHtml() (*asset, error) {
	bytes, err := authDeleteHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auth/delete.html", size: 552, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authLoginHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x4f\x8f\x9b\x3e\x10\xbd\xef\xa7\x18\xf9\xfe\x23\xd2\xef\x1c\x22\x55\x2b\xf5\xd4\x63\xef\xc8\xc1\x03\x8c\xea\x3f\xc8\x1e\xd2\xad\x2c\x7f\xf7\x0a\x42\x12\x02\xce\x66\xa5\xe6\x04\xb6\x67\xe6\x3d\xbf\x37\xb6\x63\x64\x34\xbd\x96\x8c\x20\x7a\xe9\x99\xa4\x0e\xbb\xda\x19\xe3\x6c\xd5\xa1\x54\xe8\x8b\x8e\x8d\x16\x50\xa4\xf4\xb6\x57\x74\x82\x5a\xcb\x10\x4a\x01\x03\x41\xed\x2c\x4b\xb2\xe8\xc5\xe1\x0d\x00\x60\xbd\x6e\x48\x29\x8d\x20\x35\xb5\x16\x15\xd4\x68\x19\xfd\x75\xd8\x7a\x52\x73\xe2\x26\x59\xbb\x96\xec\x7f\x8d\xf3\x66\x11\x31\x45\x75\xff\xdf\x4f\x6c\x52\x47\x52\x68\x59\x1c\x62\x64\x0f\xc5\xb7\x9a\xe9\x84\x3f\xa4\x6d\x41\x4c\x55\xab\xb1\x6a\xc5\xc4\x1a\x45\x4a\xfb\x9d\xa2\xd3\x0a\x62\xb7\xc6\xd8\x8f\x29\x60\x90\x3b\xa7\x4a\xd1\xbb\xc0\xe2\x02\x37\x10\x68\xe9\x5b\x84\x29\x24\x46\x6a\xa0\xf8\xae\x65\xe8\xde\xf9\x23\x25\x40\xef\x9d\x87\x18\xd1\xaa\x94\x44\x86\x39\xd9\x7e\x60\x20\x55\x0a\x76\xbf\xd0\x0a\xe0\x3f\x3d\x96\xa2\x23\xa5\xc6\x91\x95\x06\x4b\x51\x07\xdf\x54\xf3\xfa\x49\xea\x01\x4b\x11\x23\x14\xef\xc1\x37\x3f\xc7\x59\xc8\xd7\x5e\xa8\xd2\x10\x6a\x05\x1b\x7e\xf7\xe3\x62\x08\xe8\x47\xc4\x6a\xa2\xbd\xa6\xff\x78\x17\x13\x9a\x96\x47\xd4\x07\xd8\xaa\x7e\xa9\x2a\x52\x82\xfd\xee\x1c\x96\x2f\x71\x16\xe3\xac\x00\xe3\x07\x5f\xf6\x7f\xad\x00\xbd\x96\x35\x76\x4e\x2b\xf4\xa3\x06\x8f\xa0\x2a\xe7\x2b\x34\x92\xb4\x48\x49\x64\xb1\xbe\xa8\x44\x4a\x37\xc1\x73\xab\xe2\x5e\x9b\x2c\x54\xc6\x99\x6d\xd3\xe5\x38\x3d\x09\xd8\xd8\xf5\x69\x07\x0c\x34\xbb\x69\x30\x04\xd9\xe2\x78\x3e\x3e\x71\xfe\x21\xc5\xfc\x3e\x1f\xcd\x6f\x7b\xf0\x89\xf0\xbd\x0c\xe1\xb7\xf3\xea\xb5\x2d\x78\xa9\x3a\x1d\xf8\xaf\x76\xe0\x35\x69\xee\xc2\xdb\xf8\x49\x17\x2e\xd0\x72\xc7\xf2\x35\xe6\xaf\x85\xfa\x07\xf3\x37\x9a\xbf\xca\xfc\xe3\xc0\xec\xec\x82\x44\xa3\x07\x52\xf3\x85\x19\x86\xa3\x21\x86\x73\x8c\xc8\xb9\x36\x5d\xd7\x93\x65\xe7\xa0\xf5\x35\x3d\x5e\xb9\x8b\xf7\xe3\x46\x7a\xfe\x9d\x3f\xd9\x27\xae\x71\x8e\x97\x6f\xdb\xdf\x00\x00\x00\xff\xff\xb8\xcc\x96\xa3\x08\x07\x00\x00")

func authLoginHtmlBytes() ([]byte, error) {
	return bindataRead(
		_authLoginHtml,
		"auth/login.html",
	)
}

func authLoginHtml() (*asset, error) {
	bytes, err := authLoginHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auth/login.html", size: 1800, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authRegisterHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x96\x4b\x8f\x9b\x30\x10\xc7\xef\xfb\x29\x46\xbe\x97\x48\x3d\x87\x48\xd5\x4a\x3d\xf5\xd8\x3b\xf2\xe2\x01\xac\xfa\x81\xec\x21\xdd\x0a\xf9\xbb\x57\xbc\x12\xc0\x24\xe9\xd2\x55\x4e\x68\x60\xe6\x3f\xaf\x9f\xd0\xb4\x2d\xa1\xae\x15\x27\x04\x56\x73\x47\x92\x2b\x7f\xc8\xad\xd6\xd6\x64\x15\x72\x81\x2e\xa9\x48\x2b\x06\x49\x08\x2f\x47\x21\xcf\x90\x2b\xee\x7d\xca\xa0\x91\xa0\xa5\x10\x0a\x81\x2b\x59\x1a\x14\x90\xa3\x21\x74\x17\xb3\x74\x52\xb0\xd3\x0b\x00\xc0\x22\xd0\x61\x29\x3d\xa1\xfb\x52\x58\xa7\x47\x87\xde\xa9\xfa\x7a\x35\xa2\xa8\xdc\x1a\x42\x43\xec\xd4\xb6\xe4\x20\xf9\x96\x93\x3c\xe3\x0f\x6e\x4a\x60\x93\x60\xd6\x09\x66\x24\x49\x21\x0b\xe1\x78\x10\xf2\x3c\x53\x3f\xcc\xe5\x8f\x9d\x2b\x68\xa4\xca\x8a\x94\xd5\xd6\x13\x9b\x32\x35\x12\x14\x77\x25\x42\xef\xd2\xb6\xb2\x80\xe4\xbb\xe2\xbe\x7a\xa5\xf7\x10\xd0\x39\xeb\xda\x16\x8d\x08\x01\xd8\xaa\x5e\x69\xea\x86\x40\x8a\x94\x91\xfd\x85\x86\x01\xfd\xa9\x31\x65\x95\x14\xa2\xb3\x0c\xd7\x98\xb2\xdc\xbb\x22\x1b\xbf\x9f\xb9\x6a\x30\x65\x6d\x0b\xc9\xab\x77\xc5\xcf\xee\x2d\x84\xc0\x4e\x70\x73\x10\x85\x44\x25\xa2\xb2\x96\x76\xd2\x78\x74\x5d\xb6\xac\x2f\x37\x04\xe8\x9f\x30\xd6\x7d\xa3\xfc\x3e\x93\xe2\x6f\xa8\x4e\x10\x0f\x79\x92\x64\x21\xc0\xf1\x30\xb8\xc5\xe1\xc3\x04\x86\xb6\x09\xdf\x69\x6a\xfa\x12\x0d\xb5\xe2\x39\x56\x56\x09\x74\x5d\xe3\x77\xd2\xb0\x48\x7e\xdd\xf5\x75\x7e\x71\xeb\x21\xb0\xb1\xcf\x48\x66\xb5\xb5\x25\x27\x5b\x79\xee\x7c\x8c\x46\x7d\x73\x71\x8d\x1c\xb7\xa0\xd1\x7b\x5e\x62\x47\xf2\x9d\x8d\x6d\x96\x15\xf7\xb3\xf5\xee\xc3\xb8\xa0\xe6\x52\xdd\x65\xe5\x43\xa8\xf4\x72\xfb\x38\x19\x42\x1f\x41\x32\x25\xd8\x47\x48\x1f\xfd\x2c\x3c\x16\xa3\xdd\xc9\xc6\x72\x3d\xcf\x04\xa3\xe6\xde\xff\xb6\x4e\x7c\x1e\x1b\x93\x62\xff\x83\xfe\x17\x3a\x2e\x01\x23\x21\x57\xfb\x01\x24\xb3\x4c\xfb\x38\x99\x04\x9e\x85\xca\x7a\xd8\x3b\x69\x89\x76\xf6\x4c\x60\x72\x6b\x0a\xe9\x74\xf6\xf9\xe0\xac\x95\x77\x03\x14\x09\x3d\x02\x69\x23\xf3\x3e\xa0\xd6\x42\xcf\x02\xeb\xd6\x52\x76\x02\x76\x73\xc7\xff\x03\xda\x5b\x43\x64\xcd\xac\x80\x42\x35\x72\xe1\x22\xc6\xb3\xcc\x37\x6f\x5a\x12\x0c\x01\x6c\x0b\x95\xe9\x1e\xec\x11\x19\xfc\xe6\x77\x60\x77\xd7\x8d\x67\xe9\x50\xf0\xf8\xd8\x3c\x85\x0b\x6b\x69\x7e\x03\xff\x0d\x00\x00\xff\xff\x47\x1d\xcd\x26\x30\x0b\x00\x00")

func authRegisterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_authRegisterHtml,
		"auth/register.html",
	)
}

func authRegisterHtml() (*asset, error) {
	bytes, err := authRegisterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auth/register.html", size: 2864, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseDocsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x8e\xc3\x20\x0c\x45\xf7\x9c\xc2\x62\x9f\x70\x81\x99\xdc\xc5\xc5\xae\x82\x0a\x71\x04\x56\xaa\x0a\x71\xf7\x2a\x15\x55\xa9\x54\x6f\xbc\xf8\xcf\xdf\xaf\x56\xe5\xb4\x47\x54\x06\xbb\x63\xd6\x80\xb1\xb8\x95\x91\x38\xcf\xab\xa6\x68\x61\x6e\xcd\xfc\x51\x38\xc0\x47\x2c\xe5\xdf\x16\xf6\x1a\x64\xb3\x8b\x01\x00\x18\x13\x12\x3f\x7d\xa7\x2f\xe2\x6c\xf5\x91\xdf\x54\xc2\x7c\x23\xb9\x6f\xd3\x45\xe8\x31\x70\xe7\xd4\x9a\x08\x66\x12\xdf\xda\xe7\xde\xf5\x82\xfe\xd0\x51\x38\x16\x63\xfa\xfe\xe9\x7f\x15\xd1\xd1\xff\x19\x00\x00\xff\xff\x05\xc5\x15\xb5\xe5\x00\x00\x00")

func baseDocsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_baseDocsHtml,
		"base/docs.html",
	)
}

func baseDocsHtml() (*asset, error) {
	bytes, err := baseDocsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base/docs.html", size: 229, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseDocs_indexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x8e\xc3\x20\x0c\x45\xf7\x39\x85\xc5\x3e\x70\x81\x99\xdc\xc5\xc5\xae\x82\x0a\x71\x04\x56\xaa\x0a\x71\xf7\x2a\x15\x55\xa9\x54\x6f\xbc\xf8\xcf\xdf\xaf\x56\xe5\xb4\x47\x54\x06\xb3\x63\xd6\x80\xb1\xb8\x95\x91\x38\xdb\x55\x53\x34\x60\x5b\x9b\xfe\x28\x1c\xe0\x23\x96\xf2\x6f\x0a\x7b\x0d\xb2\x99\x65\x02\x00\x18\x13\x12\x3f\x7f\xa7\x2f\xe2\x6c\xf5\x91\xdf\x54\xc2\x7c\x23\xb9\x6f\xf3\x45\xe8\x31\x70\xe7\xd4\x9a\x08\x2c\x89\x6f\xed\x73\xef\x7a\x41\x7f\xe8\x28\x1c\xcb\xd4\xd7\x4f\xfd\xab\x88\x8e\xfa\xcf\x00\x00\x00\xff\xff\xf5\x34\xfe\xae\xe4\x00\x00\x00")

func baseDocs_indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_baseDocs_indexHtml,
		"base/docs_index.html",
	)
}

func baseDocs_indexHtml() (*asset, error) {
	bytes, err := baseDocs_indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base/docs_index.html", size: 228, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseHomeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xce\x4c\x53\xd0\xf3\x2c\xf6\xc9\x4f\x4f\x4d\xa9\xad\xe5\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50\x2a\x48\x2c\x2a\xc9\x4c\xcc\x29\xd6\x4f\xce\xcf\xcd\xcd\xcf\x8b\xcf\x48\x4d\x4c\x49\x2d\xd2\xcb\x28\xc9\xcd\x51\x52\xd0\x03\x2b\x4e\xcd\x29\x4e\x45\xd3\x95\x94\x58\x9c\xaa\x9f\x93\x98\x97\x92\x99\x97\x8e\xaa\x36\x0f\xa7\x05\x69\xf9\xf9\x25\xc8\x26\x03\x02\x00\x00\xff\xff\xe4\x34\x42\x1f\x96\x00\x00\x00")

func baseHomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_baseHomeHtml,
		"base/home.html",
	)
}

func baseHomeHtml() (*asset, error) {
	bytes, err := baseHomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base/home.html", size: 150, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseJobsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\x31\x0e\x83\x30\x0c\x40\xd1\x3d\xa7\xb0\xbc\x17\x2e\xd0\x72\x95\xca\x34\xae\x62\xe4\xc8\x08\x5b\x2c\x51\xee\xce\x9a\x21\xfb\xd7\xfb\xad\x05\xd7\x53\x29\x18\xf0\xa4\x2b\x84\xd4\xd7\xc2\x94\xf9\x5a\x4a\x54\x45\x58\x7a\x4f\xef\x2c\x37\xfc\x94\xdc\x3f\x78\xd8\xee\xaf\x62\x95\x71\x4b\x00\x00\x53\xe1\xb0\xfd\xab\xe2\x31\x1a\x6b\x96\x7b\x4b\xd3\xfc\x6f\x16\xe3\xf0\x09\x00\x00\xff\xff\x63\xff\xac\x43\x96\x00\x00\x00")

func baseJobsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_baseJobsHtml,
		"base/jobs.html",
	)
}

func baseJobsHtml() (*asset, error) {
	bytes, err := baseJobsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base/jobs.html", size: 150, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseLandingHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xc1\x6e\xdb\x30\x0c\xbd\xf7\x2b\x08\xdd\x17\xa3\x3d\x0e\x89\x81\x9d\x8a\x01\xbd\xf5\x03\x02\x5a\x66\x24\xae\xb2\x64\x48\x74\xba\x4d\xf0\xbf\x0f\x72\x9a\xc6\x4e\xbc\x21\xcb\x21\xb2\x4d\xf2\xf1\x91\x8f\x54\xce\x42\x5d\xef\x50\x08\x54\x8f\x51\x18\x5d\xaa\x2c\x61\x4b\x71\x63\xa5\x73\x0a\x36\xe3\xf8\xb0\x6d\xf9\x08\xda\x61\x4a\x3b\x35\x30\xb0\x3f\x52\x14\x6a\xa1\x1c\xac\xd1\x41\x87\x49\x4a\x14\x68\xf2\x42\x11\xd0\xb1\xf1\xd4\x42\x22\xd3\x91\x17\x55\x3f\x00\x00\x5c\xc1\xe8\xe0\x05\xd9\x53\xfc\x30\xaf\xb8\x38\x8c\x86\x20\x91\x0e\xbe\xc5\xf8\xeb\x92\xb9\x0f\xec\x85\xbd\x81\x8e\xfc\x30\x8b\x9f\x30\xf0\x8c\xc0\x42\x9d\x02\x1b\xe9\xb0\x53\x95\xaa\x73\x96\x08\x9b\x6f\x5a\xf8\x48\x2f\xe8\x0d\x28\x1b\x3a\xfa\xd2\x88\x57\xe3\xb8\xad\xb0\x86\x9c\xf9\x00\x9b\xef\xe9\x25\x18\x6a\xc7\xf1\x1e\xd8\x1f\xa1\x49\xab\xd8\xc5\xb0\xc4\x26\x7f\x1f\xa6\x15\xe9\xd3\xd7\xaa\x32\x2c\x76\x68\x36\x3a\x74\xd5\x6f\x6a\x39\x94\x7f\xc7\x49\x14\x48\xe9\x8b\xec\xd4\xbe\x71\xe8\xdf\x54\xfd\x3c\x79\x96\x34\xf7\x50\x6e\x83\x5e\xa7\x6c\xc9\xf5\x33\xca\x4b\xac\x99\x32\x91\x8d\x15\x98\x30\x97\x4e\xcb\xa4\xf3\x51\x69\x06\x91\xe0\x3f\x29\xe0\x20\xb6\x72\xc1\xb0\x5f\xe3\x71\x32\xac\x90\xf8\x3f\xfc\x48\x86\x93\x94\xf9\xba\x4d\xf1\x69\x5b\x28\xff\x3a\xf4\x7d\x28\x78\xc5\x29\x5d\x89\x55\x7e\xab\xfb\x92\xce\x51\x7b\x57\xc2\x2e\x8b\x53\x34\x77\x89\x56\x70\xfe\x55\x04\x38\xf6\x6f\xb0\x50\xac\xe0\x0e\x68\xa8\xca\x19\xd2\x3b\x8b\xb6\x53\x15\xb3\x8a\xc6\x51\xd5\x5b\x3e\x83\xe6\x7c\x70\x78\x65\x87\xe9\x93\xaa\xb7\x15\xd7\x39\x2f\x4c\x53\x07\x6e\x2a\x5d\x19\xd7\xaa\xe5\xe3\x6c\x59\x2f\xaf\xf3\xc7\xe5\x0a\x0b\xfd\x94\xf5\x55\xb7\x8f\x6b\x3d\x38\x5d\x3e\x57\x73\x75\xab\x9f\x46\xd1\x76\xdf\xdb\x88\x89\xd4\x8c\xe6\xb6\xb2\x8f\xf3\x1c\x4f\x2b\xda\xcf\x63\xf7\x69\x68\xa6\x19\xb0\x4f\x7f\xbd\x85\xec\x60\x08\xfa\xc8\x5d\xb9\x82\x3e\x06\xad\x7e\x26\x81\x57\xc1\x89\xf3\xa5\xf1\xa7\xcd\xc0\x18\xc3\x3b\xb0\x2e\x7e\xa5\xdd\xb7\x8d\x3a\x1d\x7f\x02\x00\x00\xff\xff\xc0\x07\x2d\x49\x7e\x05\x00\x00")

func baseLandingHtmlBytes() ([]byte, error) {
	return bindataRead(
		_baseLandingHtml,
		"base/landing.html",
	)
}

func baseLandingHtml() (*asset, error) {
	bytes, err := baseLandingHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base/landing.html", size: 1406, mode: os.FileMode(420), modTime: time.Unix(1505156588, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseRegionsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\x31\x0e\xc2\x30\x0c\x85\xe1\x3d\xa7\xb0\xbc\xd3\x5e\x00\x7a\x15\x64\x11\x43\x2c\x39\xb8\x8a\xad\x2e\x51\xee\xce\xc2\x90\x21\xfb\x7b\xdf\xdf\x7b\x70\x3d\x95\x82\x01\x4f\x6a\x21\xa4\xbe\x17\xa6\xcc\x6d\x2b\x51\x15\x61\x1b\x23\xdd\xb3\x5c\xf0\x52\x72\x7f\x60\xe3\x8f\xd8\xd7\x6f\xc5\x2a\xe3\x91\x00\x00\x96\xc8\x7f\xf7\x54\xf1\x98\xa9\x3d\xcb\x75\xa4\xe5\xe5\x6d\x16\x73\xf7\x17\x00\x00\xff\xff\x3c\x24\xdf\x64\x9d\x00\x00\x00")

func baseRegionsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_baseRegionsHtml,
		"base/regions.html",
	)
}

func baseRegionsHtml() (*asset, error) {
	bytes, err := baseRegionsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base/regions.html", size: 157, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseRegions_jobHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\x31\x0e\x83\x30\x0c\x40\xd1\x3d\xa7\xb0\xbc\x17\x2e\xd0\x72\x95\xca\x34\x6e\x31\x32\x35\x8a\x2d\x96\x28\x77\x67\xcd\x90\xfd\xeb\xfd\x5a\x83\x8f\x53\x29\x18\xf0\xa4\x12\x42\xea\xf3\xc6\x94\xb9\x4c\x5b\x1c\x8a\x30\xb5\x96\x9e\x59\x2e\xf8\x28\xb9\xbf\xb0\xf0\x4f\xec\xef\x8f\xdd\x56\xc7\x25\x01\x00\x0c\x91\xdd\xd6\xb7\x8a\x47\xcf\xcc\x59\xae\x25\x0d\xf3\xaf\x59\xf4\xcf\x3b\x00\x00\xff\xff\x59\x63\xa1\x65\x99\x00\x00\x00")

func baseRegions_jobHtmlBytes() ([]byte, error) {
	return bindataRead(
		_baseRegions_jobHtml,
		"base/regions_job.html",
	)
}

func baseRegions_jobHtml() (*asset, error) {
	bytes, err := baseRegions_jobHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base/regions_job.html", size: 153, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseRegions_paginateHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\x31\x0e\x83\x30\x0c\x40\xd1\x3d\xa7\xb0\xbc\x17\x2e\xd0\x72\x95\xca\x6d\x5c\x70\x65\x70\x14\x5b\x2c\x28\x77\x67\xcd\x90\xfd\xeb\xfd\xeb\x0a\xde\x8b\x52\x30\x60\xa1\x1a\x42\xea\xf3\xc6\x94\xb9\x4e\x5b\xec\x8a\x30\xb5\x96\x9e\x59\x4e\xf8\x2a\xb9\xbf\xb0\xf2\x2a\x76\xf8\xa3\xd0\x2a\x07\x05\xe3\x92\x00\x00\x86\xd0\xdf\x3e\x6f\x15\x8f\x9e\x9a\xb3\x9c\x4b\x1a\xe6\x3f\xb3\xe8\xbf\x77\x00\x00\x00\xff\xff\xa2\xfc\x6f\x1c\x9d\x00\x00\x00")

func baseRegions_paginateHtmlBytes() ([]byte, error) {
	return bindataRead(
		_baseRegions_paginateHtml,
		"base/regions_paginate.html",
	)
}

func baseRegions_paginateHtml() (*asset, error) {
	bytes, err := baseRegions_paginateHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base/regions_paginate.html", size: 157, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _errors400Html = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50\x2a\x48\x2c\x2a\xc9\x4c\xcc\x29\xd6\x4f\xce\xcf\xcd\xcd\xcf\x8b\xcf\x48\x4d\x4c\x49\x2d\xd2\xcb\x28\xc9\xcd\x51\x52\xd0\xab\xad\xe5\xc2\xaa\x38\xb5\xa8\x28\xbf\x28\x3e\x37\xb5\xb8\x38\x31\x3d\x95\x90\xe2\xb4\xfc\xfc\x12\x64\x23\x01\x01\x00\x00\xff\xff\xe3\x6f\xa0\x18\x7f\x00\x00\x00")

func errors400HtmlBytes() ([]byte, error) {
	return bindataRead(
		_errors400Html,
		"errors/400.html",
	)
}

func errors400Html() (*asset, error) {
	bytes, err := errors400HtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "errors/400.html", size: 127, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _errors404Html = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50\x2a\x48\x2c\x2a\xc9\x4c\xcc\x29\xd6\x4f\xce\xcf\xcd\xcd\xcf\x8b\xcf\x48\x4d\x4c\x49\x2d\xd2\xcb\x28\xc9\xcd\x51\x52\xd0\xab\xad\xe5\xc2\xaa\x38\xb5\xa8\x28\xbf\x28\x3e\x37\xb5\xb8\x38\x31\x3d\x95\x90\xe2\xb4\xfc\xfc\x12\x64\x23\x01\x01\x00\x00\xff\xff\xe3\x6f\xa0\x18\x7f\x00\x00\x00")

func errors404HtmlBytes() ([]byte, error) {
	return bindataRead(
		_errors404Html,
		"errors/404.html",
	)
}

func errors404Html() (*asset, error) {
	bytes, err := errors404HtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "errors/404.html", size: 127, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _errors500Html = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50\x2a\x48\x2c\x2a\xc9\x4c\xcc\x29\xd6\x4f\xce\xcf\xcd\xcd\xcf\x8b\xcf\x48\x4d\x4c\x49\x2d\xd2\xcb\x28\xc9\xcd\x51\x52\xd0\xab\xad\xe5\xc2\xaa\x38\xb5\xa8\x28\xbf\x28\x3e\x37\xb5\xb8\x38\x31\x3d\x95\x90\xe2\xb4\xfc\xfc\x12\x64\x23\x01\x01\x00\x00\xff\xff\xe3\x6f\xa0\x18\x7f\x00\x00\x00")

func errors500HtmlBytes() ([]byte, error) {
	return bindataRead(
		_errors500Html,
		"errors/500.html",
	)
}

func errors500Html() (*asset, error) {
	bytes, err := errors500HtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "errors/500.html", size: 127, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jobsListHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x41\x6e\xc3\x20\x10\x45\xf7\x39\xc5\xc8\x07\x08\x17\xa0\x91\xba\xed\xaa\x8b\xee\x23\x30\xd3\x30\x15\x66\x22\x18\xa7\xad\x10\x77\xaf\x62\x5b\x2a\x8a\xed\x76\x05\x9a\xff\xe0\x7f\xf1\x29\x45\x70\xb8\x06\x23\x08\xdd\xd5\x24\x21\x13\xb2\xea\x79\x18\x38\x9e\x3d\x1a\x87\xe9\xe8\x65\x08\x1d\x1c\x6b\x3d\x68\x47\x37\xe8\x83\xc9\xf9\xa9\x83\x91\xa0\xe7\x28\x86\x22\xa6\xee\x74\x00\x00\x68\xf5\x91\xe0\x92\xc8\xad\x98\x47\x0e\x12\x7f\x36\xd2\x24\x8b\xb1\x01\x9b\x8b\xac\xc9\xd4\xc3\x34\x7d\x40\x67\xfc\x1e\x74\x3d\x9f\xb5\xb4\x2d\x2c\x07\x4f\x6f\x24\x01\xb5\x12\xff\x37\xf6\x3c\x8a\xe7\xf4\x3f\xf7\x3a\xda\x40\xd9\xa3\xdb\x47\xb5\xda\xcb\xa4\xc5\xb2\xfb\xde\x37\x28\x25\x99\x78\x41\x38\xbe\xb0\xcd\xb5\xc2\x66\x77\x1f\x6c\xcf\x96\xbf\x7e\x5b\x83\x52\x30\xba\x5a\xf7\xc2\x6c\x7b\xde\xf3\xaf\x5e\x55\xab\xa9\x83\xa6\x48\xe5\xe8\xb6\x74\x3f\x6f\x97\x65\x33\xda\x3b\xb3\xb4\xff\xe9\x27\x00\x00\xff\xff\x62\x32\xfc\xbc\x7c\x02\x00\x00")

func jobsListHtmlBytes() ([]byte, error) {
	return bindataRead(
		_jobsListHtml,
		"jobs/list.html",
	)
}

func jobsListHtml() (*asset, error) {
	bytes, err := jobsListHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "jobs/list.html", size: 636, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jobsNewHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xcd\xce\x9c\x30\x0c\xbc\x7f\x4f\x61\xf9\x01\x16\xa9\x67\x58\xa9\xea\xb5\xc7\xde\x51\x48\x0c\xb8\xcd\x0f\x4a\x1c\xb6\x15\xe2\xdd\x2b\x16\x56\xa2\x2c\x48\xad\xd4\xd3\x6e\x32\x63\x7b\xc6\x1a\x32\x4d\x42\x6e\xb0\x4a\x08\x70\x50\x51\x58\xd9\x54\xe8\xe0\x5c\xf0\x75\x4f\xca\x50\xbc\xf5\xe2\x2c\xc2\x6d\x9e\x3f\x4a\xc3\x23\x68\xab\x52\xaa\x10\x32\x83\x0e\x5e\x14\x7b\x8a\x78\xff\x00\x00\x38\xe2\x5d\x64\xb3\x41\x47\x38\x86\xc7\x0e\x39\xa2\xc4\x5d\x2f\xf0\x60\x43\xa0\xc9\x0b\x45\x32\xa0\x83\xcd\xce\x1f\x8a\x9e\x85\xfd\xa7\xf7\xcb\x37\x39\x8b\x56\xf2\x82\xf7\x69\x92\x08\xb7\xcf\x5a\x78\xa4\xaf\xca\x77\x80\x9e\x1e\xf5\xf7\xd0\xd4\xc2\x62\x09\xe7\xb9\x2c\x0c\x8f\x27\x73\x8a\xb3\x41\x65\x1b\xa2\x03\x47\xd2\x07\x53\xe1\x10\x92\xe0\x6b\x66\x66\xb0\x2a\x76\x04\x0b\xe5\x44\xf8\xb3\x9c\xfd\x90\x05\xd8\x54\x28\xe1\x07\x79\x04\xf9\x35\x50\x85\x3d\x1b\xb3\x9c\xbc\x72\x54\xa1\x4e\xb1\xad\x37\x7c\x54\x36\x53\x85\xd3\x04\xb7\x2f\x29\xb6\xdf\x96\x5b\x98\xe7\xab\xfe\xbb\x1d\xb4\x4c\xd6\x5c\xf0\x9e\x5c\xab\x1a\xb2\x77\x78\xdf\xd0\x7e\x3b\x50\x16\x2b\xef\xba\xcf\xea\x69\x35\x22\xf4\x53\x5e\x36\xd6\x16\x70\xa1\xf4\x7c\xeb\xff\xd7\x84\xa1\xa4\xff\xce\xc3\xa2\x5b\x45\x52\x9b\xf4\xa5\x30\xf2\x20\x1c\x3c\xde\xcb\xe2\x85\xfe\xbb\x95\x26\x8b\x04\xbf\x8b\x48\x6b\x33\x9b\x2d\x28\x29\x37\x8e\x05\x56\x0e\x9e\x99\xd0\x91\x94\xac\x21\x5d\x59\x67\x39\x5d\xf2\x76\xf8\xb8\xfe\x54\xb4\x3b\x6e\x7f\xb7\x9f\xd3\xe7\xa0\x0d\x41\xf6\xef\xc0\xef\x00\x00\x00\xff\xff\x61\x74\xc8\xbd\x34\x04\x00\x00")

func jobsNewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_jobsNewHtml,
		"jobs/new.html",
	)
}

func jobsNewHtml() (*asset, error) {
	bytes, err := jobsNewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "jobs/new.html", size: 1076, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jobsUpdateHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\xcd\xae\x9b\x30\x10\x85\xf7\xf7\x29\x46\x7e\x00\x90\xba\x86\x48\x55\xbb\xaa\xba\xbc\xfb\xc8\xe0\x21\x4c\xeb\x1f\x64\xc6\xb9\xad\x90\xdf\xbd\x32\x90\x96\x4b\x4c\xd2\x4a\x5d\x25\x30\x67\x8e\x67\x3e\x71\x3c\x4d\x8c\x66\xd0\x92\x11\xc4\x20\x3d\x93\xd4\x63\xd9\x3a\x63\x9c\x3d\xf7\x28\x15\xfa\xa2\x67\xa3\x05\x14\x31\xbe\x54\x8a\xae\xd0\x6a\x39\x8e\xb5\x80\x40\xd0\x3a\xcb\x92\x2c\x7a\x71\x7a\x01\x00\xd8\xd7\x2f\x9e\xd4\x5a\xda\x97\xbd\x7b\xdb\x54\xf6\x55\xa4\x4b\xcf\xf0\x46\x0a\xa1\x45\xcb\xe8\x51\x41\xeb\x74\x30\x76\xd7\x34\x37\xf6\x1f\xee\x5f\xde\x8d\x93\x66\x45\xcb\xe2\x34\x4d\xec\xa1\xf8\xd8\x32\x5d\xf1\xab\xb4\x17\x10\x61\x50\x92\xf1\xfc\xcd\x35\x67\x26\xd6\x28\x62\xac\x4a\x45\xd7\xcc\x51\x65\xee\xac\xaa\x73\xde\x80\x41\xee\x9d\xaa\xc5\xe0\x46\x16\xb7\x63\x03\x81\x96\xfe\x82\x90\x24\x99\xd9\xe7\x76\xb2\x43\x60\x20\x55\x0b\x76\xdf\xd1\x0a\xe0\x9f\x03\xd6\xa2\x27\xa5\xd2\x93\x95\x06\x6b\xd1\x8e\xbe\x3b\xaf\xf5\xab\xd4\x01\x6b\x31\x4d\x50\x7c\x1a\x7d\xf7\x9a\xde\x42\x8c\x47\xfe\x1b\x0c\x1d\xa1\x56\x07\xba\x59\xab\x65\x83\xfa\x04\xf7\x90\xb6\x74\xa0\x2a\x17\xdd\xb1\xcf\xb2\xd3\xb2\x08\xe3\x0f\xbe\xad\xb1\x58\xc0\x61\xe3\x34\x51\x07\xc5\x17\xd7\xc4\x78\xa8\xf9\xbd\x7e\xd2\x15\xaf\xc9\x31\x46\xf1\xc0\x12\xad\x7a\x60\x77\x40\x2d\xff\x05\xc0\x7f\x05\xaa\x70\x6c\xff\x8e\x67\x62\x28\x3d\xca\x15\x63\x6a\xf4\x34\x30\xb9\x5c\x22\xde\x6f\xff\x1c\xe8\xa2\x9b\x69\x7e\xfe\x63\xfc\xb4\xe1\x31\xd6\xaa\xbc\xcd\xfc\xef\x80\x9b\xc0\xec\xec\x26\x44\x9d\x0e\xa4\xd6\x28\x8d\xa1\x31\xc4\xb0\x68\x44\x0e\xed\x12\xe8\x39\xc6\x8b\x2a\x97\xe4\x94\xc8\xdd\x0d\xf4\x7e\xa2\xcd\xe3\xfa\x77\xfd\xc9\xde\x99\x9d\x73\xbc\xbd\x2c\x7f\x05\x00\x00\xff\xff\xfa\x2d\x02\x2e\x59\x05\x00\x00")

func jobsUpdateHtmlBytes() ([]byte, error) {
	return bindataRead(
		_jobsUpdateHtml,
		"jobs/update.html",
	)
}

func jobsUpdateHtml() (*asset, error) {
	bytes, err := jobsUpdateHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "jobs/update.html", size: 1369, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jobsViewHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xcd\x6e\x9c\x30\x10\xbe\xe7\x29\x46\x3c\x00\x48\x39\x93\x95\x2a\xed\x25\x3d\xb4\x95\xda\x7b\x64\xf0\xb0\xcc\xca\x3f\xd4\x36\xac\x22\x8b\x77\xaf\x0c\xde\x2d\xa1\xe0\x6a\x93\x70\x58\xaf\x3d\xdf\x78\xbe\xb1\xbf\x19\x7b\xef\x50\x76\x82\x39\x84\xac\x63\xc6\x11\x13\xb6\xa8\xb5\x94\x5a\xbd\xb4\xc8\x38\x9a\xbc\x75\x52\x64\x90\x8f\xe3\x43\xc9\x69\x80\x5a\x30\x6b\x9f\x32\xe8\x09\x6a\xad\x1c\x23\x85\x26\x3b\x3c\x00\x00\x2c\xed\x3d\xc1\xc9\x10\x8f\x96\xb5\xd5\xe8\xcb\xc2\xb2\xb6\x86\xbd\x91\x4e\xad\x83\x0b\x71\x84\x5a\x8b\x5e\xaa\x15\x7e\x23\x9e\xc5\x93\x44\xe5\xec\x06\x72\x1f\xbd\x03\x0e\x9f\xf7\xd4\x40\xfe\x55\x57\xe3\xb8\x8b\x29\xdb\xc7\x83\xf7\x01\x94\xff\x22\x27\x70\x1c\xcb\xa2\x7d\x4c\xed\x89\x8a\x8f\x63\xdc\xfb\xfb\x45\xa1\xb9\xce\xf0\x77\x5c\xc8\x9f\x8f\x53\xd8\xfc\x07\x1a\xab\xd5\xf3\x31\x15\xff\x6d\x52\x54\x6b\x05\x55\xef\x9c\x56\x7b\xc7\x70\xf3\x64\x0b\x3f\xc1\x2a\x14\x02\x79\xf4\xcd\xa0\x35\xd8\x3c\x65\xc5\x59\x57\xb6\xe8\x3b\xce\x1c\x16\x31\xcd\x40\x27\x3b\x94\x74\xf5\x46\x4e\x6e\x8a\x9b\x1d\xca\x82\xd2\x31\xc3\x37\xef\x96\xa6\x56\xb0\x3b\xb8\x1b\xe4\x69\xfe\x1c\x05\x7e\x1e\x7f\x83\x52\x0f\x1f\xe0\x5f\x16\x9c\x86\x1d\x85\x26\x4c\x1f\x10\x2f\x78\x2f\xf9\xac\xa8\x23\xda\xda\x50\xe7\x48\xab\x69\x7d\x12\x63\x8a\xcb\xbf\x35\xb7\xcd\x71\xc5\xaf\xd1\xbd\xf9\x4f\xf1\xae\xbd\x42\xd1\x9b\xa9\xe8\x39\x0d\xc4\x49\x9d\xc0\x30\x12\x89\x14\x37\xce\x84\x25\xcf\x64\x72\x9a\x15\x72\xf5\xeb\xb4\x25\x47\x03\x42\x23\x7a\xe2\x81\x43\x54\xd0\xe1\x4b\xd7\x89\xd7\xb2\x98\xa7\xef\xba\xce\x1d\x8e\xe9\x7b\x83\xdb\xdd\x5d\x9b\x43\xf5\x1a\xf4\x1e\x05\xdd\x07\x19\xcf\x5d\x62\xee\x0e\xdf\x98\xc4\x3c\xfc\x04\x55\x7b\xdf\x5b\x34\x8a\x49\x84\x3d\x50\xd0\x66\x3a\xf6\xbe\x26\xee\xcc\x17\xee\x48\xf8\x42\xae\x85\xb3\xae\x7e\x3a\xe6\x2c\xdc\x0a\x15\x36\xdf\xa7\xb3\xae\x5e\x6c\x00\xfe\x7d\x9b\x16\x8d\xf5\xcd\xf8\x89\x65\xb8\xb1\xbc\x5a\x5a\x4c\xe3\xdf\x38\x6c\x66\xd1\x68\xed\x96\xcf\xeb\x9f\x00\x00\x00\xff\xff\xc1\x21\x46\x70\x8b\x07\x00\x00")

func jobsViewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_jobsViewHtml,
		"jobs/view.html",
	)
}

func jobsViewHtml() (*asset, error) {
	bytes, err := jobsViewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "jobs/view.html", size: 1931, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsCommon_headerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50\x2a\x48\x2c\x2a\xc9\x4c\xcc\x29\xd6\xcf\x48\x4d\x4c\x49\x2d\xd2\xcb\x28\xc9\xcd\x51\x52\xd0\xab\xad\xe5\xc2\xaa\x2a\x37\x31\x33\x2f\x3e\x37\x35\xaf\x14\x49\x21\x20\x00\x00\xff\xff\xc0\x81\x2a\x00\x4f\x00\x00\x00")

func partialsCommon_headerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsCommon_headerHtml,
		"partials/common_header.html",
	)
}

func partialsCommon_headerHtml() (*asset, error) {
	bytes, err := partialsCommon_headerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/common_header.html", size: 79, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsDocs_indexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xc1\x4a\x05\x21\x14\xc6\xf1\xfd\x7d\x8a\x83\xb8\x2c\xdd\x87\x23\xb4\x0c\x2e\x2d\x82\x1e\xe0\xa4\xa7\x19\x6b\x3c\x82\x3a\x16\x88\xef\x1e\x45\x35\x13\xdd\xa5\xfe\xe0\x7c\x7f\xe3\x43\x03\xb7\x62\x29\x93\x28\xe4\x6a\x48\x2c\xec\x09\x00\xc0\x30\xfe\x4a\x24\xde\xbe\xbf\xbf\x08\x8f\x70\x1d\x2a\x45\x28\xb4\x92\xab\xe4\x05\x2c\x99\x9e\x27\xa1\x5f\xd2\x53\xd1\x99\xe6\x90\xb8\x08\xdb\x7b\xcd\xa0\x6e\x5d\x0d\x8d\xce\xc8\x33\x08\x9f\xdc\x16\x89\x6b\x11\x63\x18\x8d\xfb\xf5\xde\xdf\x42\x5d\x40\xf9\xe4\xee\xd8\xd3\xfb\x18\x07\xca\xc8\x33\x81\x7c\xbd\x92\xed\x66\x52\x07\xba\xd0\xf4\x93\xd2\xbb\x6c\xea\xf1\xe1\x3c\xc6\x67\x87\x6c\xea\x1e\x23\xfd\x1b\x25\xf6\x7f\x96\xf6\xb7\xd1\x8c\xcd\x9e\x8c\xf6\xa1\xd9\x8f\x00\x00\x00\xff\xff\x09\x35\x92\xa4\x31\x01\x00\x00")

func partialsDocs_indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsDocs_indexHtml,
		"partials/docs_index.html",
	)
}

func partialsDocs_indexHtml() (*asset, error) {
	bytes, err := partialsDocs_indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/docs_index.html", size: 305, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsError_messageHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\x4d\x0a\xc2\x30\x10\x85\xf7\x9e\xe2\xd1\x03\xd4\x0b\xa8\xe0\x5e\x0f\x31\x64\xc6\x30\xd0\x8e\x90\x4c\x8b\x10\x7a\x77\xa9\x2d\x55\x62\xb3\x09\x6f\xde\xcf\x77\x62\x1d\x11\x3a\xca\xf9\xdc\x60\x50\x84\xa7\x39\xa9\x49\x6a\x2e\x07\x00\xa8\xfd\x5e\x99\x3b\x01\x75\x1a\x4d\x18\x41\xcc\x25\x6d\x32\x26\xe5\xb5\x38\xbf\x52\xf4\x81\xf6\x2e\x39\x53\x94\x69\xda\xee\xbf\xa3\x2e\x2f\xff\xa3\xee\x05\x07\x85\x49\x24\xd7\x51\xd0\x2f\x93\x55\x7a\x41\x7a\x42\x7b\x0d\x73\xec\x46\x16\xf7\xf0\x9f\xe5\x23\xeb\xf8\xad\x57\xb2\x14\x31\x5e\x1b\xab\xb5\x7c\xef\x00\x00\x00\xff\xff\xfb\x8e\x65\xf6\x2f\x01\x00\x00")

func partialsError_messageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsError_messageHtml,
		"partials/error_message.html",
	)
}

func partialsError_messageHtml() (*asset, error) {
	bytes, err := partialsError_messageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/error_message.html", size: 303, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsFlashHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xc1\x6a\xc3\x30\x10\x44\xef\xf9\x8a\xc1\xe8\x58\x94\x7b\x88\x03\xa5\xd0\x53\xfb\x11\x5b\x79\xb1\x97\xaa\x12\x58\xaa\x5a\x58\xf6\xdf\x8b\x63\xa5\x84\xe8\xa6\xdd\x99\x37\xc3\xaa\xba\x39\xe6\x0f\x8a\xa7\xd1\x9b\x41\xf5\x47\xea\x02\xff\x1a\xa9\x2c\x66\x87\xf3\x24\x0d\x21\x52\x29\xe3\xf0\x2d\xa8\xfc\x5b\x11\x72\xaa\x24\x89\xd7\xe1\x72\x00\x00\xd5\x95\xd2\xcc\x70\x9f\x4f\xae\x9d\x46\x78\x98\x5d\x17\x0f\xe6\x2f\x2e\x85\x66\x46\x5d\x29\x15\xa9\x92\xd3\xe6\x75\xcd\xbf\x6c\x12\xb3\x8e\x7b\x74\x2e\x4c\xd3\x7f\xd6\xed\xa9\xd6\x15\xbd\xb9\x7f\x0e\x55\x1a\xbf\x51\x9a\xe1\x9a\x7f\xdf\x63\x7a\x87\x2b\xed\x38\x49\xbb\x83\xcb\x0d\x1d\x62\x2e\x0c\x09\x39\x0d\x97\xf3\x51\x76\xc9\x9d\x5a\x95\xd3\xb4\x5d\x61\x1f\xf5\xef\x5f\x00\x00\x00\xff\xff\x98\x33\xe9\xcc\x33\x01\x00\x00")

func partialsFlashHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsFlashHtml,
		"partials/flash.html",
	)
}

func partialsFlashHtml() (*asset, error) {
	bytes, err := partialsFlashHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/flash.html", size: 307, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsFooterHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xc1\x6e\xc3\x20\x0c\x86\xef\x7d\x0a\x8b\xd3\x26\xad\xf0\x02\x2c\xa7\x5e\x98\x76\x98\x94\x27\x60\xe0\x66\x54\x14\x2a\x6c\xa9\xda\x2c\xde\x7d\x6a\xb2\x44\xcb\x09\xfc\x59\xfe\xff\x4f\x24\x9d\x41\x8f\xa1\xa5\x1b\x13\x1c\x7b\x3f\x88\x34\x5f\x26\xdc\x43\x4b\xf3\x00\xd4\xc2\xab\x12\xd1\xbd\xab\xc1\x9a\x05\x0e\x07\x91\x23\x60\x89\xf3\xf1\xfa\xb3\xeb\x12\x00\x60\x69\x71\xf4\x5e\x27\x8c\x73\xe0\x83\xde\x53\x89\xf5\xae\x73\x0d\x3e\x8f\x5c\x9b\x9f\x50\x13\xb2\x63\xbc\x3e\xa9\x5b\xab\xe7\x94\xd1\x9d\xd4\x8b\x88\xa7\xb7\x11\xf4\x07\x36\xaa\x45\xbb\x53\xef\xcf\x7f\xb1\x5b\xdb\xe6\xb2\x33\x35\xc4\x9e\x53\x30\x17\x32\x3f\x18\x73\x22\xd6\x17\xfa\x6f\x6e\xcd\x67\x8d\xdf\x8f\xf7\x8b\xaf\x79\xf8\x0d\x00\x00\xff\xff\x06\xf5\xa2\x6d\x0e\x01\x00\x00")

func partialsFooterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsFooterHtml,
		"partials/footer.html",
	)
}

func partialsFooterHtml() (*asset, error) {
	bytes, err := partialsFooterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/footer.html", size: 270, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsHeaderHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x3d\x4f\x43\x21\x14\x86\xf7\xfb\x2b\x8e\xec\x85\xa8\x8b\x03\x97\xc4\x54\x1d\xb5\xc3\x75\x70\x32\x48\x4f\x0b\x2d\xd0\xca\x39\x8d\x69\x08\xff\xdd\xb4\x37\x8d\x36\x4d\x8c\x13\x79\x79\x9f\x87\x8f\x1c\x7d\xf5\xf0\x32\x1d\xde\x66\x8f\xe0\x39\x45\xd3\xe9\x71\xe9\xb4\x47\x3b\x87\x68\xf3\xb2\x17\x98\x85\xe9\x00\x00\x74\x42\xb6\xe0\xbc\x2d\x84\xdc\x8b\xd7\xe1\x69\x72\x77\x56\x65\x9b\xb0\x17\x8e\xca\xe2\x9d\x37\x6b\xcc\x02\xdc\x26\x33\x66\xee\x45\xad\x72\x4a\x65\x31\x1c\xb6\x5b\x13\xa0\x0c\xd4\xfa\x15\xd8\x83\x9c\xd9\x25\x0e\x81\x23\xb6\x36\x9e\xc5\x87\x60\x6a\x95\xad\x69\x35\x86\x63\x51\x2b\x46\xba\xa4\xee\xb7\xdb\x67\x9b\xf0\x12\xce\xf3\x13\x1b\x43\x5e\x43\xc1\xd8\x0b\xe2\x7d\x44\xf2\x88\x2c\xc0\x17\x5c\xf4\x42\x11\x5b\x0e\x4e\x39\x22\x45\x98\x6c\xe6\xe0\x64\x0a\x59\x3a\xa2\xd3\xef\xfe\xeb\xef\xc2\x6f\x8b\x5c\x09\x5b\x06\x2a\xee\x87\x5a\x91\x5a\x7d\xee\xb0\xec\x27\xb7\xf2\x46\x5e\x1f\x2f\x5a\x91\x30\x5a\x8d\xf4\xdf\xea\xd9\xfb\xce\xb5\x4e\xab\xc3\xcc\x4c\xa7\x3f\x36\xf3\xbd\xe9\xbe\x03\x00\x00\xff\xff\x82\xa9\xf0\x13\xda\x01\x00\x00")

func partialsHeaderHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsHeaderHtml,
		"partials/header.html",
	)
}

func partialsHeaderHtml() (*asset, error) {
	bytes, err := partialsHeaderHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/header.html", size: 474, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsJob_boxHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\xb1\x6a\x43\x31\x0c\x45\xf7\x7c\xc5\xc5\x74\xb6\xf7\xe2\x67\x08\xed\xd2\xa5\x74\xe8\x0f\x38\xb5\x1e\x75\x71\xec\x87\x2d\x27\x14\xa1\x7f\x2f\xa1\x94\x34\x43\x16\x49\xc3\xe1\xe8\x88\x3c\xb4\x73\xa5\x8e\xc7\xe5\x77\x5b\xd5\x9d\xe7\x1e\x76\x00\xe0\x39\x05\x91\xbc\xc2\xbe\x67\x2e\xa4\x0a\x91\x7f\x27\xd5\xa4\xea\x1d\xa7\x2b\xed\x23\x3e\x3b\xad\x8b\x71\xd3\xfd\xb9\xed\x1b\xf5\xd1\xea\x6b\x3c\x92\xbd\x0c\x55\x13\x00\x91\x39\xa8\xd7\x78\x24\xdc\xc3\xe0\x5d\x0c\xb7\x7e\x91\x14\x99\x60\x9f\x3a\x45\xa6\xb4\xe7\xfb\x01\x5f\xed\x30\xdc\x29\xd3\xd9\x89\xd8\x97\x67\x55\x83\x8f\x12\xc7\x58\xcc\xd6\x46\xe6\x7c\x22\xac\x65\xe6\x84\x99\x71\x98\xcc\xad\x5e\xb2\xf6\xdb\x56\xbe\xaf\x7f\xbd\xe3\x1e\x7e\x02\x00\x00\xff\xff\xa2\x48\xe5\xb8\x25\x01\x00\x00")

func partialsJob_boxHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsJob_boxHtml,
		"partials/job_box.html",
	)
}

func partialsJob_boxHtml() (*asset, error) {
	bytes, err := partialsJob_boxHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/job_box.html", size: 293, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsJob_listHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x70\x5a\x8e\x8b\x05\x2c\xb7\xc2\x36\x30\xa0\x97\x02\x03\x76\xd9\x7d\x90\x2d\xc6\x52\xa7\x48\x86\xc5\x3a\x33\x34\xfd\xf7\xc1\x1f\xeb\x6c\xd4\x4e\x9b\xa1\xb9\xc4\xe2\x23\xc1\xf7\x1e\x25\x86\xb0\x37\xc2\x56\x77\x59\xf2\xa5\x24\xdd\xe2\x57\x61\xab\x18\x77\xa9\xd4\x2d\x94\x46\x78\x9f\x31\x8f\x25\x69\x67\x59\xbe\x03\x00\x98\x23\x8f\xae\x38\x18\xed\x69\x82\xfa\x5f\x08\x17\x4d\x0a\x92\x47\x57\xf8\x18\x67\xe1\x46\xd8\x0a\x61\xff\xf3\xd3\xbe\xbd\xcb\x92\x05\x34\x54\xec\xdb\x59\x6c\xad\x91\x26\x3c\xcf\x1a\x3d\xa7\x91\x28\x0c\xbe\x8c\x8f\x98\x42\x21\xb7\xb0\x66\x1d\x98\x0a\xa1\x74\xc6\xd7\xc2\x66\xec\xb8\xd2\x75\x91\x2c\x40\x35\x78\xca\x18\xef\x45\xf3\x56\xe3\x85\x87\x90\x3c\xdc\xc7\xc8\xfe\x0a\x38\x19\xfc\x75\x20\x4d\x06\x59\x1e\x42\xf2\xbd\xff\x8a\x31\xe5\xe2\x0a\x07\x4e\x6a\x83\x3a\xdf\xe2\xde\xd7\x5c\x51\x5c\x38\xd9\xfd\x9f\x1b\x79\x08\xd4\xc0\x70\x55\x80\x49\x14\xd2\x68\x8b\x2c\xc6\x2b\x2c\xc7\x4a\xf9\xcf\xc7\xcf\x83\xf4\xfb\xa9\xf8\xb7\x14\x34\x58\x40\x5b\x74\xb7\x55\xde\x42\x56\x7b\xff\x84\xf2\x47\xd1\xdd\xce\xf6\x6d\x53\xff\xc8\x20\x87\xb3\xa8\xd0\x92\x03\x6d\xcb\xd7\x86\x2a\xf3\xdd\xfb\xea\xdd\xf0\xef\x39\xa1\x78\x22\x72\x16\x80\xba\x1a\x33\x36\x9e\xd8\xc2\x23\x51\xd7\xa6\x3b\x14\x64\x59\x3f\x90\x31\xe3\x35\x0d\x37\x4a\xe0\x1b\x97\x2f\xe5\x2b\xef\x37\xe5\x52\xb7\xf3\x9d\x82\x56\x2e\x36\xc6\x8b\xb3\xf1\xb8\xb2\x3e\x56\xda\xa9\x63\xfe\xcd\xd5\xfe\x43\xca\xd5\x71\x05\xae\xf3\x07\x02\x8f\x78\xf6\x40\x0a\x1b\x04\xd1\x20\x58\x07\xfd\xcb\x86\x93\x6b\xc0\x2b\x77\x81\x0e\x29\x49\x79\xfd\x66\xd2\x13\x34\xfe\xfd\x09\x00\x00\xff\xff\xf0\xd8\x04\x3f\x72\x05\x00\x00")

func partialsJob_listHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsJob_listHtml,
		"partials/job_list.html",
	)
}

func partialsJob_listHtml() (*asset, error) {
	bytes, err := partialsJob_listHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/job_list.html", size: 1394, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsJob_statsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x8e\x84\x20\x10\x45\xf7\x9e\xa2\xc2\x01\xf0\x02\xce\x6c\x66\x35\x89\xcb\xb9\x00\x02\x3a\x95\x26\x45\x47\xd0\x74\x52\xa9\xbb\x77\x44\x4d\xb4\x75\x09\x79\x8f\xf7\x69\x1c\xce\x60\x83\x49\xe9\x4b\x4d\x08\xdd\x94\x73\xa4\xa4\xbe\x2b\x00\x00\xe6\xd1\xd0\xe0\x41\x8b\x94\xf3\x07\x1c\x4c\xe7\x83\x77\x9b\xb4\x39\x37\x5c\x67\x12\x5a\x60\xd6\x3f\x31\xc4\x51\xe4\x2a\x14\x09\x77\x85\x59\xff\xda\x48\x22\x80\x76\xc1\x9a\x1a\xcf\x28\xb3\xfe\xf3\xaf\xbc\xad\x2a\x72\xed\x70\x3e\x0c\x30\xfb\x5b\x70\xd7\x0f\xbe\xcf\xf0\x8c\x48\x19\x69\x58\xbf\xa1\xe0\x7f\xf4\x7d\x69\xb7\x48\x0f\x11\x75\x49\xb6\x0b\x77\x6a\x9a\x95\x39\xc4\x99\x3d\x39\x91\x6a\xbd\x7a\x07\x00\x00\xff\xff\xf2\xd5\x0d\x2e\x5d\x01\x00\x00")

func partialsJob_statsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsJob_statsHtml,
		"partials/job_stats.html",
	)
}

func partialsJob_statsHtml() (*asset, error) {
	bytes, err := partialsJob_statsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/job_stats.html", size: 349, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsMain_menuHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\xbd\xae\xdb\x30\x0c\x85\xf7\x3e\x05\xa1\xbd\xd6\x5e\x24\x06\xba\xb4\x28\x70\xb7\x3e\xc0\x85\x6c\x33\x12\x7b\x65\xc9\x90\xa8\x14\xa8\xe0\x77\x2f\xe4\x24\x8d\xff\x1a\x2f\x49\x90\x43\x7e\xe6\x39\xa4\x4f\x1d\x5d\xa1\xb5\x2a\xc6\xb3\x48\x04\x56\x05\x8d\xc0\x7e\x00\xe8\xd1\x25\x51\x7f\x02\x00\x58\x15\xb5\xde\xb1\x22\x87\xe1\x2e\x4f\x25\xea\x51\x40\x8c\xbd\x00\x13\xf0\x72\x16\x52\xd4\x39\x73\x80\xea\x6b\xcb\x74\xc5\x37\xe5\x34\x08\xe3\x7b\xfc\xdc\xb0\x13\xe3\x78\x92\xaa\x86\x9c\xe9\x02\xd5\x8f\xf8\xe6\x35\x76\xe3\x78\x84\xfc\xe5\x9b\xb8\xcb\x2d\xc2\x9c\x7b\x04\x0a\x18\x53\x8f\xbb\xa8\x9b\xb4\x01\xe5\x8c\xee\x78\x42\xc3\x3c\xc4\x2f\x52\x6a\x62\x93\x9a\xaa\xf5\xbd\xfc\x83\x1d\xf9\xf2\x69\x29\xb2\x00\x2e\x29\xf3\x59\xbc\x37\x56\xb9\x0f\x51\x7f\x9f\x2a\xcb\xb3\x8e\x66\xee\x7c\xbb\x6f\xde\xa0\x1d\x66\xe6\x9f\x9c\xd9\xea\x02\x69\xc3\xf3\xbd\x3e\x7d\x2d\x36\x00\x39\x33\xf6\x83\x55\x8c\x20\x06\x15\x98\x94\x8d\x32\x45\x0c\x95\xe1\xde\x0a\xa8\xa6\x1a\xb4\x11\x67\x61\xbc\x98\x5a\x25\x36\xd2\x7a\x4d\x6e\x6f\xf4\x9b\xb0\x9a\xfb\x88\x16\x50\x53\xe4\x72\x82\x7b\xdb\xbb\x6b\xff\x0e\x6c\xb9\xb6\xa7\xe5\x9f\x69\x18\x7c\x60\xec\x4a\x63\xdc\x94\xec\xa4\x10\x1f\x1d\xef\xb6\xb4\x3c\x03\x59\xb5\xbe\x0c\x27\x11\x90\xbb\x62\xc1\x40\x93\x98\xbd\x03\x4b\xee\x03\x16\x36\x0b\x3f\x29\x8d\x32\x67\x88\xbf\x89\x5b\x33\xb9\x9b\x39\x1d\x47\x51\x9f\xe8\x01\xcd\xf9\x62\xd5\x4a\x87\xe9\x2f\x51\x9f\x24\xd5\x9b\x78\x37\xd7\x2c\x3b\xba\xde\x5f\xf8\xdb\xcf\xfb\xd7\x2d\xab\x6f\x56\x45\xf3\xbf\xe3\xb8\x14\x71\x79\x1d\x85\xfd\x37\x00\x00\xff\xff\x09\x65\x96\x10\x5e\x04\x00\x00")

func partialsMain_menuHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsMain_menuHtml,
		"partials/main_menu.html",
	)
}

func partialsMain_menuHtml() (*asset, error) {
	bytes, err := partialsMain_menuHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/main_menu.html", size: 1118, mode: os.FileMode(420), modTime: time.Unix(1505156590, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsRegions_listHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\xc1\x4e\xeb\x30\x10\x45\xf7\xfd\x8a\x79\x51\x96\xaf\xf1\xa2\xbb\x2a\xa9\xc4\x12\x09\xc1\x82\x2f\x70\x93\x49\x3c\xd4\xb5\x2b\xcf\x34\x05\x59\xfe\x77\xa4\xd6\x85\x36\x50\xc4\x82\xed\x99\xc9\xcd\xf1\xdc\x18\x4b\xab\xdd\xb0\x6c\xaa\xbb\x56\x68\xc4\x07\xed\x86\x94\x66\x75\x47\x23\xb4\x56\x33\x37\x05\x63\x2b\xe4\x5d\xb1\x9a\x01\x00\xc4\x78\x20\x31\x50\x05\x1c\xc8\x3b\x4e\x29\xd3\xa0\xdd\x80\x50\x6e\xfe\x97\xe3\xb2\xa9\x32\xbe\x1d\x73\x9c\xee\xed\x79\xd8\x93\x15\x0c\x73\x4b\x2c\x17\x0b\xc7\x25\x4b\xd7\xe0\x08\x35\x98\x80\x7d\x53\xa8\x17\xbf\x66\x95\x5d\x54\x8c\xe5\x58\x3d\x1b\x1f\x24\xa5\x62\x12\x4d\x82\x5b\x60\xb4\xd8\x0a\x76\xc5\xd7\xc8\xd3\x2b\xca\xb1\x7a\xd4\x5b\xcc\xfa\x57\xbf\x54\x7a\x22\xa6\xa6\x66\x7f\xa9\xfa\x93\x61\xfe\xec\xb7\x8a\x9f\xf7\x56\x7b\x7b\x5a\xa8\x55\x47\xe3\xb9\x4f\x74\xdd\x47\x8b\x68\x19\xbf\xe9\x6e\x6d\xb5\xdb\xb0\xd5\x82\x60\x34\xcf\x7b\x7a\xc5\x6e\x7e\xa0\x4e\xcc\x65\x9d\x66\xb1\x7a\xf2\x3b\xfe\x57\x2b\xb3\xb8\xc0\xbb\xd5\xbd\x00\x23\x6e\x19\xc4\x60\x40\xd0\x01\xc1\x79\xc8\xa7\x80\xde\x07\x60\xe3\x0f\xf0\x86\x52\xd5\x6a\x77\x53\xf1\x84\xde\x03\x00\x00\xff\xff\x02\xeb\x08\xb3\xb2\x02\x00\x00")

func partialsRegions_listHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsRegions_listHtml,
		"partials/regions_list.html",
	)
}

func partialsRegions_listHtml() (*asset, error) {
	bytes, err := partialsRegions_listHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/regions_list.html", size: 690, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsSidenavHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcc\x41\x0a\xc2\x30\x10\x85\xe1\x7d\x4f\x31\xcc\x5e\x73\x81\x34\x20\xb8\xd4\x43\x8c\xc9\x58\x47\xda\x29\x64\x62\x84\x96\xde\x5d\x10\x2d\x2e\xc4\x85\xdb\xf7\xf1\x7e\x9f\xa4\x42\xec\xc9\xac\x45\xe3\x58\x64\x54\x0c\x0d\x00\x80\x57\x5a\x65\x60\xbd\xbd\xe6\x27\xd1\x27\x6c\xa4\xf0\x00\xc6\x3d\xc7\xc2\x09\xe1\x92\xf9\xdc\xa2\xbb\x8e\x27\x73\x99\x3b\x19\xd5\x30\xcc\x73\xc9\xb0\xdd\xc5\x22\x95\x0f\xa4\x1d\xe0\x9b\x96\xc5\x3b\xfa\xd9\xfe\x9a\x74\xc3\x44\x18\x8e\x77\xd2\x89\xfe\x0b\x24\xca\x18\xf6\x94\x6d\xbd\x7b\xa7\x54\x43\xe3\x5d\x92\x1a\x1e\x01\x00\x00\xff\xff\x0a\x14\xb5\x42\x1a\x01\x00\x00")

func partialsSidenavHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsSidenavHtml,
		"partials/sidenav.html",
	)
}

func partialsSidenavHtml() (*asset, error) {
	bytes, err := partialsSidenavHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/sidenav.html", size: 282, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsSupported_langsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xc1\x6a\xc4\x20\x10\x86\xef\x7d\x8a\x41\x7a\x36\xf7\x92\xa4\x94\x42\x4f\x7b\x28\xec\x13\x0c\x71\xd6\x48\x5d\x0d\x66\x4c\x0b\x83\xef\x5e\x36\x26\xcb\x86\x3d\x89\x3a\xff\xfc\xdf\xd7\x1a\xb7\xc0\xe0\x71\x9e\x3b\x95\x1d\x80\x49\x71\x32\xf1\x37\x80\x77\xe1\x07\x1c\xd3\x55\xf5\x2f\x00\x00\x8f\x83\x4c\x7f\xac\xfa\xd6\xed\x77\x91\x8b\x47\x0b\xfa\x63\x60\xb7\xd0\x09\x83\x2d\x05\xd6\x27\xd5\xb7\x8d\xeb\x45\x0e\x5f\x6d\x63\xdc\xb2\x6d\xbd\xef\xb8\x17\xbb\x21\x86\x1a\x5b\x27\x44\x5e\x87\xb7\x4e\x7f\xe6\x94\x28\xf0\x37\xf2\x58\xca\x13\xd0\x95\x42\xde\x38\x6b\x26\x61\xb0\x04\xfa\x9c\xa7\x29\x26\x26\x73\x2b\x9e\xb7\xe0\x1a\xc6\x3d\xba\x2a\xc2\x98\xe8\xd2\xa9\xc6\x63\xb0\x19\x2d\x35\x22\xfa\x3c\xc6\xc4\xa5\xbc\x4f\xc8\x63\x77\xa3\x28\xe5\xe8\xac\xbf\x3c\xee\xa2\x15\x18\x44\xf4\x29\x56\x45\x7c\xc4\xa1\x60\x76\xea\xea\x5e\x8f\xff\x00\x00\x00\xff\xff\xcc\xe4\x83\x0d\x7d\x01\x00\x00")

func partialsSupported_langsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsSupported_langsHtml,
		"partials/supported_langs.html",
	)
}

func partialsSupported_langsHtml() (*asset, error) {
	bytes, err := partialsSupported_langsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/supported_langs.html", size: 381, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsUserHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x51\x6a\xc3\x30\x0c\x86\xdf\x77\x0a\xe1\x03\xc4\x17\x48\x03\x7b\x1f\x63\x57\x70\x63\x2d\x55\x17\x4b\xc3\x96\xd3\x41\xe9\xdd\x47\x32\x7b\x04\x96\xb0\xc1\xe8\x8b\xf5\xf0\x5b\x9f\x7e\xfd\xa8\xf5\x34\x41\x3f\xba\x94\x0e\x26\x13\x80\x8f\xf2\xee\xe5\xc2\x30\x12\xbf\x01\x29\x06\xd3\x3d\x00\x00\xac\x3f\x2a\x7e\xa8\xe9\xae\x57\x8d\xd0\x3c\xf6\x4a\x13\x3e\x39\x1e\xc0\x30\x5e\xcc\xed\xd6\x5a\x4f\x53\x69\xa2\xda\xf2\xcd\xa5\x5e\xd8\x74\xad\xa5\x9f\xd8\x80\x9c\xcb\xb4\x45\x72\x55\x58\x6c\xc0\x29\xe2\xeb\xc1\xd8\xb3\x1c\x93\x9d\x27\x6d\x18\x38\xcb\x71\x31\xe0\x7e\xa5\x44\x4c\x39\xe0\x1e\xe7\x4b\x5d\xa3\xca\x52\xb5\xfc\x27\xb5\xe6\x05\x63\x12\x2e\xe5\xd9\x05\x6c\xe6\xe7\xee\xc1\x25\x54\x25\x1e\x92\xdd\xda\xb8\x8a\x7f\x8c\xcf\x65\x3d\xd9\x51\x06\xc9\x9b\x87\x50\x94\xbd\xfc\x3e\x03\x00\x00\xff\xff\x1b\x6d\x6f\xdb\x75\x02\x00\x00")

func partialsUserHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsUserHtml,
		"partials/user.html",
	)
}

func partialsUserHtml() (*asset, error) {
	bytes, err := partialsUserHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/user.html", size: 629, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resumeHomeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xb2\x81\x51\xa9\x89\x29\x0a\x39\x89\x79\xe9\xb6\x4a\xa9\x79\x4a\x76\x5c\x0a\x0a\x0a\x0a\x36\xb9\xa9\x25\x89\x0a\xc9\x19\x89\x45\xc5\xa9\x25\xb6\x4a\xa1\x21\x6e\xba\x16\x30\xa9\x92\xcc\x92\x9c\x54\x3b\x1b\x7d\x08\xcd\x65\xa3\x0f\x32\xc0\x8e\xcb\x26\x29\x3f\xa5\xd2\x8e\x8b\xcb\x46\x1f\xc2\xb0\xd1\x07\x9b\x0f\x08\x00\x00\xff\xff\x27\xec\xda\x28\x76\x00\x00\x00")

func resumeHomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_resumeHomeHtml,
		"resume/home.html",
	)
}

func resumeHomeHtml() (*asset, error) {
	bytes, err := resumeHomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resume/home.html", size: 118, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resumeNewHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x5d\x8a\x87\x30\x0c\xc4\xdf\x3d\x45\xe8\x01\xf4\x02\xea\x55\x96\xd0\x66\x35\xd0\x2f\xd2\xa8\x0f\xe2\xdd\x17\x17\x59\xa4\xdb\xff\x53\xd3\xcc\x2f\xc3\xc0\x9c\xa7\x52\xc8\x1e\x95\xc0\x64\x14\x65\xf4\x65\xb0\x29\x84\x14\xbf\x56\x42\x47\xd2\xaf\x1a\xbc\x81\xfe\xba\xba\xd1\xf1\x0e\xd6\x63\x29\x93\x81\x8d\x61\x11\x76\x60\x53\x54\xe4\x48\x62\xe6\x0e\x00\xa0\x86\x6a\xbd\xc5\xdc\x46\x2f\xb9\x46\x24\x1d\x95\x5a\x13\xc4\xcb\xaa\x70\xb0\x23\xb0\x14\x95\x84\xee\x60\x7e\x0b\xb1\x71\xf8\x77\xcc\x6e\x32\x98\xf3\x07\xe4\x17\x13\x2a\x5b\xa0\x79\x1c\x9e\xa1\x6d\x36\x38\xde\x1b\x01\xff\xaf\xab\xd5\xeb\xfb\x8c\xcf\xd3\xac\xe5\x3b\x25\x7d\xf7\xf1\x13\x00\x00\xff\xff\x74\xa3\x63\x8a\xbc\x01\x00\x00")

func resumeNewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_resumeNewHtml,
		"resume/new.html",
	)
}

func resumeNewHtml() (*asset, error) {
	bytes, err := resumeNewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resume/new.html", size: 444, mode: os.FileMode(420), modTime: time.Unix(1505217958, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resumeUpdateHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xb2\x81\x51\xa9\x89\x29\x0a\x39\x89\x79\xe9\xb6\x4a\xa9\x79\x4a\x76\x5c\x0a\x0a\x0a\x0a\x36\xb9\xa9\x25\x89\x0a\xc9\x19\x89\x45\xc5\xa9\x25\xb6\x4a\xa1\x21\x6e\xba\x16\x30\xa9\x92\xcc\x92\x9c\x54\x3b\x1b\x7d\x08\xcd\x65\xa3\x0f\x32\xc0\x8e\xcb\x26\x29\x3f\xa5\xd2\x8e\x8b\xcb\x46\x1f\xc2\xb0\xd1\x07\x9b\x0f\x08\x00\x00\xff\xff\x27\xec\xda\x28\x76\x00\x00\x00")

func resumeUpdateHtmlBytes() ([]byte, error) {
	return bindataRead(
		_resumeUpdateHtml,
		"resume/update.html",
	)
}

func resumeUpdateHtml() (*asset, error) {
	bytes, err := resumeUpdateHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resume/update.html", size: 118, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resumeViewHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xb2\x81\x51\xa9\x89\x29\x0a\x39\x89\x79\xe9\xb6\x4a\xa9\x79\x4a\x76\x5c\x0a\x0a\x0a\x0a\x36\xb9\xa9\x25\x89\x0a\xc9\x19\x89\x45\xc5\xa9\x25\xb6\x4a\xa1\x21\x6e\xba\x16\x30\xa9\x92\xcc\x92\x9c\x54\x3b\x1b\x7d\x08\xcd\x65\xa3\x0f\x32\xc0\x8e\xcb\x26\x29\x3f\xa5\xd2\x8e\x8b\xcb\x46\x1f\xc2\xb0\xd1\x07\x9b\x0f\x08\x00\x00\xff\xff\x27\xec\xda\x28\x76\x00\x00\x00")

func resumeViewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_resumeViewHtml,
		"resume/view.html",
	)
}

func resumeViewHtml() (*asset, error) {
	bytes, err := resumeViewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resume/view.html", size: 118, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testBaseFooterTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\x49\xcb\xcf\x2f\x49\x2d\xb2\xe3\xe2\xcc\xad\x54\x80\xb0\xb9\x6c\xf4\x61\x82\x36\xfa\x19\x25\xb9\x39\x76\x80\x00\x00\x00\xff\xff\x4d\x7a\xea\x59\x25\x00\x00\x00")

func testBaseFooterTplBytes() ([]byte, error) {
	return bindataRead(
		_testBaseFooterTpl,
		"test/base/footer.tpl",
	)
}

func testBaseFooterTpl() (*asset, error) {
	bytes, err := testBaseFooterTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/base/footer.tpl", size: 37, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testBaseHeaderTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\xc9\x28\xc9\xcd\xb1\xe3\xb2\xc9\x48\x4d\x4c\xb1\xe3\xe2\xac\xae\xce\x4c\x53\xd0\x0b\xc9\x2c\xc9\x49\xad\xad\xb5\x29\x01\xd1\x76\xd5\xd5\x70\x01\x7d\x98\x48\x6a\x4e\x31\x42\x41\x55\x6a\x4a\x4e\x66\x71\x09\x92\x6c\x5e\x4a\x6d\x2d\x97\x8d\x3e\xd8\x50\x40\x00\x00\x00\xff\xff\x4b\x87\xdd\x59\x62\x00\x00\x00")

func testBaseHeaderTplBytes() ([]byte, error) {
	return bindataRead(
		_testBaseHeaderTpl,
		"test/base/header.tpl",
	)
}

func testBaseHeaderTpl() (*asset, error) {
	bytes, err := testBaseHeaderTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/base/header.tpl", size: 98, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testTmplHelloTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\x31\x0a\x43\x21\x0c\x06\xe0\xdd\x53\x84\xec\xad\xb8\x8b\x77\x51\x9a\x92\x41\xab\xe8\x0f\x1d\x42\xee\xfe\x96\x37\xbe\x0b\x7c\x66\x90\xb1\x7a\x85\x10\x43\x0e\x62\xab\x47\xa2\x4a\xfd\xc8\x7e\x63\x75\x76\x0f\x59\x53\x31\xc3\x26\x3e\x7f\x26\xd6\x39\xe4\xd5\xf0\x63\xf7\x1c\x35\x95\xf0\x6c\x7c\xe7\xc4\x6d\x90\xfb\x15\x00\x00\xff\xff\xb9\x00\x9d\x33\x68\x00\x00\x00")

func testTmplHelloTmplBytes() ([]byte, error) {
	return bindataRead(
		_testTmplHelloTmpl,
		"test/tmpl/hello.tmpl",
	)
}

func testTmplHelloTmpl() (*asset, error) {
	bytes, err := testTmplHelloTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/tmpl/hello.tmpl", size: 104, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testTmplScriptHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\x29\x4e\x2e\xca\x2c\x28\xb1\xb3\xd1\x87\x32\x00\x01\x00\x00\xff\xff\x1b\x99\x48\xfe\x11\x00\x00\x00")

func testTmplScriptHtmlBytes() ([]byte, error) {
	return bindataRead(
		_testTmplScriptHtml,
		"test/tmpl/script.html",
	)
}

func testTmplScriptHtml() (*asset, error) {
	bytes, err := testTmplScriptHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/tmpl/script.html", size: 17, mode: os.FileMode(420), modTime: time.Unix(1505154912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"auth/delete.html": authDeleteHtml,
	"auth/login.html": authLoginHtml,
	"auth/register.html": authRegisterHtml,
	"base/docs.html": baseDocsHtml,
	"base/docs_index.html": baseDocs_indexHtml,
	"base/home.html": baseHomeHtml,
	"base/jobs.html": baseJobsHtml,
	"base/landing.html": baseLandingHtml,
	"base/regions.html": baseRegionsHtml,
	"base/regions_job.html": baseRegions_jobHtml,
	"base/regions_paginate.html": baseRegions_paginateHtml,
	"errors/400.html": errors400Html,
	"errors/404.html": errors404Html,
	"errors/500.html": errors500Html,
	"jobs/list.html": jobsListHtml,
	"jobs/new.html": jobsNewHtml,
	"jobs/update.html": jobsUpdateHtml,
	"jobs/view.html": jobsViewHtml,
	"partials/common_header.html": partialsCommon_headerHtml,
	"partials/docs_index.html": partialsDocs_indexHtml,
	"partials/error_message.html": partialsError_messageHtml,
	"partials/flash.html": partialsFlashHtml,
	"partials/footer.html": partialsFooterHtml,
	"partials/header.html": partialsHeaderHtml,
	"partials/job_box.html": partialsJob_boxHtml,
	"partials/job_list.html": partialsJob_listHtml,
	"partials/job_stats.html": partialsJob_statsHtml,
	"partials/main_menu.html": partialsMain_menuHtml,
	"partials/regions_list.html": partialsRegions_listHtml,
	"partials/sidenav.html": partialsSidenavHtml,
	"partials/supported_langs.html": partialsSupported_langsHtml,
	"partials/user.html": partialsUserHtml,
	"resume/home.html": resumeHomeHtml,
	"resume/new.html": resumeNewHtml,
	"resume/update.html": resumeUpdateHtml,
	"resume/view.html": resumeViewHtml,
	"test/base/footer.tpl": testBaseFooterTpl,
	"test/base/header.tpl": testBaseHeaderTpl,
	"test/tmpl/hello.tmpl": testTmplHelloTmpl,
	"test/tmpl/script.html": testTmplScriptHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"auth": &bintree{nil, map[string]*bintree{
		"delete.html": &bintree{authDeleteHtml, map[string]*bintree{}},
		"login.html": &bintree{authLoginHtml, map[string]*bintree{}},
		"register.html": &bintree{authRegisterHtml, map[string]*bintree{}},
	}},
	"base": &bintree{nil, map[string]*bintree{
		"docs.html": &bintree{baseDocsHtml, map[string]*bintree{}},
		"docs_index.html": &bintree{baseDocs_indexHtml, map[string]*bintree{}},
		"home.html": &bintree{baseHomeHtml, map[string]*bintree{}},
		"jobs.html": &bintree{baseJobsHtml, map[string]*bintree{}},
		"landing.html": &bintree{baseLandingHtml, map[string]*bintree{}},
		"regions.html": &bintree{baseRegionsHtml, map[string]*bintree{}},
		"regions_job.html": &bintree{baseRegions_jobHtml, map[string]*bintree{}},
		"regions_paginate.html": &bintree{baseRegions_paginateHtml, map[string]*bintree{}},
	}},
	"errors": &bintree{nil, map[string]*bintree{
		"400.html": &bintree{errors400Html, map[string]*bintree{}},
		"404.html": &bintree{errors404Html, map[string]*bintree{}},
		"500.html": &bintree{errors500Html, map[string]*bintree{}},
	}},
	"jobs": &bintree{nil, map[string]*bintree{
		"list.html": &bintree{jobsListHtml, map[string]*bintree{}},
		"new.html": &bintree{jobsNewHtml, map[string]*bintree{}},
		"update.html": &bintree{jobsUpdateHtml, map[string]*bintree{}},
		"view.html": &bintree{jobsViewHtml, map[string]*bintree{}},
	}},
	"partials": &bintree{nil, map[string]*bintree{
		"common_header.html": &bintree{partialsCommon_headerHtml, map[string]*bintree{}},
		"docs_index.html": &bintree{partialsDocs_indexHtml, map[string]*bintree{}},
		"error_message.html": &bintree{partialsError_messageHtml, map[string]*bintree{}},
		"flash.html": &bintree{partialsFlashHtml, map[string]*bintree{}},
		"footer.html": &bintree{partialsFooterHtml, map[string]*bintree{}},
		"header.html": &bintree{partialsHeaderHtml, map[string]*bintree{}},
		"job_box.html": &bintree{partialsJob_boxHtml, map[string]*bintree{}},
		"job_list.html": &bintree{partialsJob_listHtml, map[string]*bintree{}},
		"job_stats.html": &bintree{partialsJob_statsHtml, map[string]*bintree{}},
		"main_menu.html": &bintree{partialsMain_menuHtml, map[string]*bintree{}},
		"regions_list.html": &bintree{partialsRegions_listHtml, map[string]*bintree{}},
		"sidenav.html": &bintree{partialsSidenavHtml, map[string]*bintree{}},
		"supported_langs.html": &bintree{partialsSupported_langsHtml, map[string]*bintree{}},
		"user.html": &bintree{partialsUserHtml, map[string]*bintree{}},
	}},
	"resume": &bintree{nil, map[string]*bintree{
		"home.html": &bintree{resumeHomeHtml, map[string]*bintree{}},
		"new.html": &bintree{resumeNewHtml, map[string]*bintree{}},
		"update.html": &bintree{resumeUpdateHtml, map[string]*bintree{}},
		"view.html": &bintree{resumeViewHtml, map[string]*bintree{}},
	}},
	"test": &bintree{nil, map[string]*bintree{
		"base": &bintree{nil, map[string]*bintree{
			"footer.tpl": &bintree{testBaseFooterTpl, map[string]*bintree{}},
			"header.tpl": &bintree{testBaseHeaderTpl, map[string]*bintree{}},
		}},
		"tmpl": &bintree{nil, map[string]*bintree{
			"hello.tmpl": &bintree{testTmplHelloTmpl, map[string]*bintree{}},
			"script.html": &bintree{testTmplScriptHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

